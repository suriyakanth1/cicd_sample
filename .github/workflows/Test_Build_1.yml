        name: Test_Build_1

        on:
          workflow_dispatch:


        jobs:
          build:
           name: GITHUB
           runs-on: ubuntu-latest
           steps:
                - name: Check out the repo
                  uses: actions/checkout@v3  
            

        #---------------- Docker
          DOCKERHUB:
           needs: [build]
           runs-on: ubuntu-latest
           environment:
              name: DEVELOPMENT
           steps:
             - name: Checkout code
               uses: actions/checkout@v2
             - name: Set up Docker Buildx
               uses: docker/setup-buildx-action@v3
             - name: Login to Docker Hub
               uses: docker/login-action@v2
               with:
                 username: suriyakanth1
                 password: dckr_pat_LSDYW7uqWPPYvQOrLJFEbl7oPjM
             - name: Build and push
               uses: docker/build-push-action@v5
               with:
                  push: true
                  tags: suriyakanth1/dockerimagebuild:main
            

    #---------------- sonarqube
          SONARQUBE:
            needs: [DOCKERHUB]
            runs-on: ubuntu-latest
            environment:
              name: DEVELOPMENT
            steps:
              - uses: actions/checkout@master
              - name: SonarQube Scan
                uses: sonarsource/sonarqube-scan-action@master
            env:
                SONAR_TOKEN: squ_8c5e7438e05474ebcb879b70892d439619fe4daa
                SONAR_HOST_URL: http://158.220.107.63:9000/

    #---------------- BUILD_SCRIPT
          BUILD_SCRIPT:
            needs: [SONARQUBE]
            runs-on: ubuntu-latest
            steps:
               - name: Run script on the VM
                 run: |
                                                      sshpass -p "root@321" ssh -o StrictHostKeyChecking=no root@root <<EOF
                       echo 'public class Main { public static void main(String[] args) { System.out.println("Hello, world!"); } }' > Main.java
                       javac Main.java
                       echo 'Main-Class: Main' > manifest.txt
                       jar cfm Main.jar manifest.txt Main.class
                       java -jar Main.jar 
                       EOF